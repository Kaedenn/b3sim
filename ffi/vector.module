
# Vector module
# This module (hopefully) defines a Vector3 type akin to the b3Vector type.
# Note that this is an attempt: the module may not be usable in actual code.

{
  "name": "native_vector",
  "cdef": """

typedef long double m128_t;
typedef float m32_t;

static const m32_t VEC_EPSILON;

typedef union vec3 {
  m128_t m128;
  struct {
    m32_t x;
    m32_t y;
    m32_t z;
  };
} vec3_t;

typedef union vec4 {
  m128_t m128;
  struct {
    m32_t x;
    m32_t y;
    m32_t z;
    m32_t w;
  };
} vec4_t;

""",
  "code": """

typedef long double m128_t;
typedef float m32_t;

#ifdef __FLT_EPSILON__
static const m32_t VEC_EPSILON = __FLT_EPSILON__;
#else
#warn Missing __FLT_EPSILON__; using hard-coded value
static const m32_t VEC_EPSILON = 1.0e-6;
#endif

#ifndef MIN
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#endif
#ifndef MAX
#define MAX(a, b) ((a) < (b) ? (b) : (a))
#endif

typedef union vec3 {
  m128_t m128;
  struct {
    m32_t x;
    m32_t y;
    m32_t z;
  };
} vec3_t;

typedef union vec4 {
  m128_t m128;
  struct {
    m32_t x;
    m32_t y;
    m32_t z;
    m32_t w;
  };
} vec4_t;

""",
  "extra_args": (),
  "extra_kwargs": {}
}

# vim: set ts=2 sts=2 sw=2 et filetype=python:
